name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:

    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install serverless globally
      run: npm install -g serverless

    - name: Cache node_modules
      id: cache-node_modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node-modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    
    - name: Install dependencies
      if: steps.cache-node_modules.outputs.cache-hit != 'true'
      run: npm install

    - name: Build
      run: npm run build

    - name: Deploy lambda
      run: serverless deploy

      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}